diff --git a/node_modules/react-native-macos/React/Base/RCTUtils.m b/node_modules/react-native-macos/React/Base/RCTUtils.m
index d91af71..3512a3b 100644
--- a/node_modules/react-native-macos/React/Base/RCTUtils.m
+++ b/node_modules/react-native-macos/React/Base/RCTUtils.m
@@ -635,6 +635,22 @@ RCTUIWindow *__nullable RCTKeyWindow(void) // [macOS]
 
   return nil;
 #else // [macOS
+  // React Native can't handle multiple windows, since the mobile platforms usually have only one window.
+  // This leads to the issue where our window can't be found because it doesn't have focus / keyboard focus.
+  // We fix this by looking for our custom window in the list of windows.
+  // @see https://github.com/microsoft/react-native-macos/issues/2296
+  if ([NSApp keyWindow] != nil) {
+    // We have a key window, so we can return it.
+    return [NSApp keyWindow];
+  } else {
+    for (NSWindow *window in [NSApp windows]) {
+      if ([[window className] isEqualToString:@"Chronos.CustomWindow"]) {
+        // We found our custom window, even though it is not the key window. We can return it.
+        return window;
+      }
+    }
+  }
+  // No key window found and no custom window found. This shouldn't happen.
   return [NSApp keyWindow];
 #endif // macOS]
 }
diff --git a/node_modules/react-native-macos/React/Fabric/RCTThirdPartyFabricComponentsProvider.h b/node_modules/react-native-macos/React/Fabric/RCTThirdPartyFabricComponentsProvider.h
new file mode 100644
index 0000000..1b60419
--- /dev/null
+++ b/node_modules/react-native-macos/React/Fabric/RCTThirdPartyFabricComponentsProvider.h
@@ -0,0 +1,34 @@
+
+/*
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by GenerateRCTThirdPartyFabricComponentsProviderH
+ */
+
+#pragma GCC diagnostic push
+#pragma GCC diagnostic ignored "-Wreturn-type-c-linkage"
+
+#import <React/RCTComponentViewProtocol.h>
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
+Class<RCTComponentViewProtocol> RCTThirdPartyFabricComponentsProvider(const char *name);
+#if RCT_NEW_ARCH_ENABLED
+#ifndef RCT_DYNAMIC_FRAMEWORKS
+
+
+
+#endif
+#endif
+
+#ifdef __cplusplus
+}
+#endif
+
+#pragma GCC diagnostic pop
+
diff --git a/node_modules/react-native-macos/React/Fabric/RCTThirdPartyFabricComponentsProvider.mm b/node_modules/react-native-macos/React/Fabric/RCTThirdPartyFabricComponentsProvider.mm
new file mode 100644
index 0000000..8974c50
--- /dev/null
+++ b/node_modules/react-native-macos/React/Fabric/RCTThirdPartyFabricComponentsProvider.mm
@@ -0,0 +1,33 @@
+
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by GenerateRCTThirdPartyFabricComponentsProviderCpp
+ */
+
+// OSS-compatibility layer
+
+#import "RCTThirdPartyFabricComponentsProvider.h"
+
+#import <string>
+#import <unordered_map>
+
+Class<RCTComponentViewProtocol> RCTThirdPartyFabricComponentsProvider(const char *name) {
+  static std::unordered_map<std::string, Class (*)(void)> sFabricComponentsClassMap = {
+    #if RCT_NEW_ARCH_ENABLED
+    #ifndef RCT_DYNAMIC_FRAMEWORKS
+
+    #endif
+    #endif
+  };
+
+  auto p = sFabricComponentsClassMap.find(name);
+  if (p != sFabricComponentsClassMap.end()) {
+    auto classFunc = p->second;
+    return classFunc();
+  }
+  return nil;
+}
diff --git a/node_modules/react-native-macos/React/UIUtils/RCTUIUtils.m b/node_modules/react-native-macos/React/UIUtils/RCTUIUtils.m
index 90ce88b..b3de174 100644
--- a/node_modules/react-native-macos/React/UIUtils/RCTUIUtils.m
+++ b/node_modules/react-native-macos/React/UIUtils/RCTUIUtils.m
@@ -31,7 +31,7 @@ RCTDimensions RCTGetDimensions(CGFloat fontScale)
   NSWindow *window = RCTKeyWindow();
   NSSize windowSize = window ? [window frame].size : CGSizeZero;
   screenSize = window ? [[window screen] frame].size : screenSize;
-  CGFloat scale = window ? [[window screen] backingScaleFactor] : 1.0; // Default scale to 1.0 if window is nil
+  CGFloat scale = window ? [[window screen] backingScaleFactor] : 2.0; // Default scale to 1.0 if window is nil
 #endif // macOS]
   
   RCTDimensions result;
